name: Build and Deploy to Firebase

on:
  push:
    branches:
      - main
      - develop  

jobs:  

  build-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'
      - name: Decode and setup keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/my-release-key.keystore
      
      - name: Create key.properties
        run: |
          cat > android/key.properties << EOF
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=my-release-key.keystore
          EOF
      
      - name: Create local.properties
        run: |
          echo "googleMapsApiKey=${{ secrets.GOOGLE_MAPS_API_KEY }}" > android/local.properties
      
      - name: Install dependencies
        run: flutter pub get
      - name: Create local.properties
        run: |
          echo "googleMapsApiKey=${{ secrets.GOOGLE_MAPS_API_KEY }}" > android/local.properties
      
      - name: Create .env file
        run: | 
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY_PROD }}" > .env.production
          
      - name: Create google-services.json
        run: |
          echo '${{ secrets.FIREBASE_JSON }}' > android/app/google-services.json
          
      - name: Check google-services.json
        run: cat android/app/google-services.json
            
      - name: Run build_runner
        run: dart run build_runner build --delete-conflicting-outputs
      
      - name: Build APK (Prod)
        run: flutter build apk --release --flavor production -t lib/main_production.dart
      
      - name: Upload to Firebase (Prod)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_PROD }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: app-tester
          file: build/app/outputs/flutter-apk/app-production-release.apk
          releaseNotesFile: release-notes.txt
